{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nconst BASE_URL = 'http://localhost:4444';\nexport const commentsApi = createApi({\n  reducerPath: 'comments',\n  baseQuery: fetchBaseQuery({\n    baseUrl: BASE_URL\n  }),\n  endpoints: builder => ({\n    createComments: builder.mutation({\n      query: ({\n        value,\n        id\n      }) => {\n        console.log(value);\n        return {\n          url: `/comments`,\n          method: 'POST',\n          body: {\n            text: value,\n            paramsId: id\n          },\n          headers: {\n            Authorization: window.localStorage.getItem('token')\n          }\n        };\n      }\n    }),\n    getAllComments: builder.query({\n      query: () => {\n        return {\n          url: '/comments',\n          method: 'GET'\n        };\n      }\n    }),\n    getOneComments: builder.query({\n      query: ({\n        id\n      }) => {\n        console.log(id);\n        return {\n          url: `/comments/${id}`,\n          method: 'GET'\n        };\n      }\n    })\n  })\n});\nexport const {\n  useCreateCommentsMutation,\n  useGetAllCommentsQuery,\n  useGetOneCommentsQuery\n} = commentsApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","BASE_URL","commentsApi","reducerPath","baseQuery","baseUrl","endpoints","builder","createComments","mutation","query","value","id","console","log","url","method","body","text","paramsId","headers","Authorization","window","localStorage","getItem","getAllComments","getOneComments","useCreateCommentsMutation","useGetAllCommentsQuery","useGetOneCommentsQuery"],"sources":["/Users/meefala/Desktop/practice/mern-blog-frontend/src/api/commentsApi.ts"],"sourcesContent":["import {createApi, fetchBaseQuery} from '@reduxjs/toolkit/query/react'\n\nconst BASE_URL = 'http://localhost:4444'\n\ninterface CommentsType {\n  value: string,\n  id: string\n}\n\ninterface UserType {\n  avatarUrl: string,\n  createdAt: string,\n  email: string,\n  fullName: string,\n  passwordHash: string,\n  updatedAt: string,\n  _id: string,\n}\n\ninterface GetCommentsType {\n  createdAt: string,\n  text: string,\n  paramsId?: string,\n  updatedAt: string,\n  _id: string,\n  user: UserType\n}\n\nexport const commentsApi = createApi({\n  reducerPath: 'comments',\n  baseQuery: fetchBaseQuery({\n    baseUrl: BASE_URL\n  }),\n  endpoints: (builder) => ({\n    createComments: builder.mutation<null, CommentsType>({\n      query: ({value, id}) => {\n        console.log(value)\n        return {\n            url: `/comments`,\n            method: 'POST',\n            body: {\n                text: value,\n                paramsId: id\n            },\n            headers: {\n                Authorization: window.localStorage.getItem('token') as any\n            }\n        }\n      }\n    }),\n\n    getAllComments: builder.query<GetCommentsType, void>({\n        query: () => {\n            return {\n                url: '/comments',\n                method: 'GET',\n            }\n        }\n    }),\n\n    getOneComments: builder.query<any, any>({\n        query: ({id}) => {\n            console.log(id)\n            return {\n                url: `/comments/${id}`,\n                method: 'GET',\n            }\n        }\n    }),\n\n  })\n})\n\n\nexport const { useCreateCommentsMutation, useGetAllCommentsQuery, useGetOneCommentsQuery } = commentsApi"],"mappings":"AAAA,SAAQA,SAAS,EAAEC,cAAc,QAAO,8BAA8B;AAEtE,MAAMC,QAAQ,GAAG,uBAAuB;AA0BxC,OAAO,MAAMC,WAAW,GAAGH,SAAS,CAAC;EACnCI,WAAW,EAAE,UAAU;EACvBC,SAAS,EAAEJ,cAAc,CAAC;IACxBK,OAAO,EAAEJ;EACX,CAAC,CAAC;EACFK,SAAS,EAAGC,OAAO,KAAM;IACvBC,cAAc,EAAED,OAAO,CAACE,QAAQ,CAAqB;MACnDC,KAAK,EAAEA,CAAC;QAACC,KAAK;QAAEC;MAAE,CAAC,KAAK;QACtBC,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;QAClB,OAAO;UACHI,GAAG,EAAG,WAAU;UAChBC,MAAM,EAAE,MAAM;UACdC,IAAI,EAAE;YACFC,IAAI,EAAEP,KAAK;YACXQ,QAAQ,EAAEP;UACd,CAAC;UACDQ,OAAO,EAAE;YACLC,aAAa,EAAEC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO;UACtD;QACJ,CAAC;MACH;IACF,CAAC,CAAC;IAEFC,cAAc,EAAElB,OAAO,CAACG,KAAK,CAAwB;MACjDA,KAAK,EAAEA,CAAA,KAAM;QACT,OAAO;UACHK,GAAG,EAAE,WAAW;UAChBC,MAAM,EAAE;QACZ,CAAC;MACL;IACJ,CAAC,CAAC;IAEFU,cAAc,EAAEnB,OAAO,CAACG,KAAK,CAAW;MACpCA,KAAK,EAAEA,CAAC;QAACE;MAAE,CAAC,KAAK;QACbC,OAAO,CAACC,GAAG,CAACF,EAAE,CAAC;QACf,OAAO;UACHG,GAAG,EAAG,aAAYH,EAAG,EAAC;UACtBI,MAAM,EAAE;QACZ,CAAC;MACL;IACJ,CAAC;EAEH,CAAC;AACH,CAAC,CAAC;AAGF,OAAO,MAAM;EAAEW,yBAAyB;EAAEC,sBAAsB;EAAEC;AAAuB,CAAC,GAAG3B,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}
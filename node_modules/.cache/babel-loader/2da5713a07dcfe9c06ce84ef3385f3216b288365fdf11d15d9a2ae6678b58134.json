{"ast":null,"code":"var _jsxFileName = \"/Users/meefala/Desktop/practice/mern-blog-new/src/components/AddComment/index.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport styles from \"./AddComment.module.scss\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport TextField from \"@mui/material/TextField\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport { setNewComments } from \"../../redux/slices/comments\";\nimport { useCreateCommentsMutation } from \"../../api/commentsApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Index = ({\n  id\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const inputRef = React.useRef(null);\n  const {\n    auth\n  } = useSelector(state => state.authSlice);\n  const [value, setValue] = React.useState('');\n  const [createComments, {\n    isLoading\n  }] = useCreateCommentsMutation();\n  console.log(value);\n  const onSubmit = () => {\n    createComments({\n      value,\n      id\n    });\n    setValue('');\n    inputRef.current.blur();\n    setTimeout(() => {\n      set;\n    }, 3000);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.root,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        classes: {\n          root: styles.avatar\n        },\n        src: `${auth.avatarUrl}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.form,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"\\u041D\\u0430\\u043F\\u0438\\u0441\\u0430\\u0442\\u044C \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\",\n          variant: \"outlined\",\n          maxRows: 10,\n          value: value,\n          onChange: e => setValue(e.target.value),\n          multiline: true,\n          fullWidth: true,\n          ref: inputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          onClick: onSubmit,\n          variant: \"contained\",\n          children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Index, \"gXzxg9mmoggrPt6b2bf4ZTpbzms=\", false, function () {\n  return [useDispatch, useSelector, useCreateCommentsMutation];\n});\n_c = Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"names":["React","styles","useSelector","useDispatch","TextField","Avatar","Button","setNewComments","useCreateCommentsMutation","jsxDEV","_jsxDEV","Fragment","_Fragment","Index","id","_s","dispatch","inputRef","useRef","auth","state","authSlice","value","setValue","useState","createComments","isLoading","console","log","onSubmit","current","blur","setTimeout","set","children","className","root","classes","avatar","src","avatarUrl","fileName","_jsxFileName","lineNumber","columnNumber","form","label","variant","maxRows","onChange","e","target","multiline","fullWidth","ref","type","onClick","_c","$RefreshReg$"],"sources":["/Users/meefala/Desktop/practice/mern-blog-new/src/components/AddComment/index.jsx"],"sourcesContent":["import React from \"react\";\n\nimport styles from \"./AddComment.module.scss\";\nimport {useSelector, useDispatch} from 'react-redux'\n\nimport TextField from \"@mui/material/TextField\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport { setNewComments } from \"../../redux/slices/comments\";\n\nimport { useCreateCommentsMutation } from \"../../api/commentsApi\";\n\nexport const Index = ({id}) => {\n\n  const dispatch = useDispatch()\n\n  const inputRef = React.useRef(null)\n  const {auth} = useSelector((state) => state.authSlice)\n  const [value, setValue] = React.useState('')\n  const [createComments, {isLoading}] = useCreateCommentsMutation()\n  console.log(value)\n\n  const onSubmit = () => {\n    createComments({value, id})\n    setValue('')\n    inputRef.current.blur()\n    setTimeout(() => {\n      set\n    }, 3000);\n  }\n\n  return (\n    <>\n      <div className={styles.root}>\n        <Avatar\n          classes={{ root: styles.avatar }}\n          src={`${auth.avatarUrl}`}\n        />\n        <div className={styles.form}>\n          <TextField\n            label=\"Написать комментарий\"\n            variant=\"outlined\"\n            maxRows={10}\n            value={value}\n            onChange={(e) => setValue(e.target.value)}\n            multiline\n            fullWidth\n            ref={inputRef}\n          />\n          <Button type=\"submit\" onClick={onSubmit} variant=\"contained\">Отправить</Button>\n        </div>\n      </div>\n    </>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,MAAM,MAAM,0BAA0B;AAC7C,SAAQC,WAAW,EAAEC,WAAW,QAAO,aAAa;AAEpD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,cAAc,QAAQ,6BAA6B;AAE5D,SAASC,yBAAyB,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElE,OAAO,MAAMC,KAAK,GAAGA,CAAC;EAACC;AAAE,CAAC,KAAK;EAAAC,EAAA;EAE7B,MAAMC,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAE9B,MAAMc,QAAQ,GAAGjB,KAAK,CAACkB,MAAM,CAAC,IAAI,CAAC;EACnC,MAAM;IAACC;EAAI,CAAC,GAAGjB,WAAW,CAAEkB,KAAK,IAAKA,KAAK,CAACC,SAAS,CAAC;EACtD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGvB,KAAK,CAACwB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACC,cAAc,EAAE;IAACC;EAAS,CAAC,CAAC,GAAGlB,yBAAyB,CAAC,CAAC;EACjEmB,OAAO,CAACC,GAAG,CAACN,KAAK,CAAC;EAElB,MAAMO,QAAQ,GAAGA,CAAA,KAAM;IACrBJ,cAAc,CAAC;MAACH,KAAK;MAAER;IAAE,CAAC,CAAC;IAC3BS,QAAQ,CAAC,EAAE,CAAC;IACZN,QAAQ,CAACa,OAAO,CAACC,IAAI,CAAC,CAAC;IACvBC,UAAU,CAAC,MAAM;MACfC,GAAG;IACL,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,oBACEvB,OAAA,CAAAE,SAAA;IAAAsB,QAAA,eACExB,OAAA;MAAKyB,SAAS,EAAElC,MAAM,CAACmC,IAAK;MAAAF,QAAA,gBAC1BxB,OAAA,CAACL,MAAM;QACLgC,OAAO,EAAE;UAAED,IAAI,EAAEnC,MAAM,CAACqC;QAAO,CAAE;QACjCC,GAAG,EAAG,GAAEpB,IAAI,CAACqB,SAAU;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC,eACFlC,OAAA;QAAKyB,SAAS,EAAElC,MAAM,CAAC4C,IAAK;QAAAX,QAAA,gBAC1BxB,OAAA,CAACN,SAAS;UACR0C,KAAK,EAAC,qHAAsB;UAC5BC,OAAO,EAAC,UAAU;UAClBC,OAAO,EAAE,EAAG;UACZ1B,KAAK,EAAEA,KAAM;UACb2B,QAAQ,EAAGC,CAAC,IAAK3B,QAAQ,CAAC2B,CAAC,CAACC,MAAM,CAAC7B,KAAK,CAAE;UAC1C8B,SAAS;UACTC,SAAS;UACTC,GAAG,EAAErC;QAAS;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf,CAAC,eACFlC,OAAA,CAACJ,MAAM;UAACiD,IAAI,EAAC,QAAQ;UAACC,OAAO,EAAE3B,QAAS;UAACkB,OAAO,EAAC,WAAW;UAAAb,QAAA,EAAC;QAAS;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5E,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC,gBACN,CAAC;AAEP,CAAC;AAAC7B,EAAA,CA1CWF,KAAK;EAAA,QAECV,WAAW,EAGbD,WAAW,EAEYM,yBAAyB;AAAA;AAAAiD,EAAA,GAPpD5C,KAAK;AAAA,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
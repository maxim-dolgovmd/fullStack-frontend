{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nconst BASE_URL = 'http://localhost:4444';\nexport const authApi = createApi({\n  reducerPath: 'auth',\n  baseQuery: fetchBaseQuery({\n    baseUrl: BASE_URL\n  }),\n  endpoints: builder => ({\n    authRegister: builder.mutation({\n      query: ({\n        email,\n        password,\n        fullName,\n        avatar\n      }) => {\n        return {\n          url: '/auth/register',\n          method: 'POST',\n          body: {\n            email: email,\n            password: password,\n            fullName: fullName,\n            avatar: avatar\n          }\n        };\n      }\n    }),\n    authLogin: builder.mutation({\n      query: ({\n        email,\n        password\n      }) => {\n        return {\n          url: '/auth/login',\n          method: 'POST',\n          body: {\n            email: email,\n            password: password\n          },\n          headers: {\n            Authorizatio\n          }\n        };\n      }\n    })\n  })\n});\nexport const {\n  useAuthRegisterMutation,\n  useAuthLoginMutation\n} = authApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","BASE_URL","authApi","reducerPath","baseQuery","baseUrl","endpoints","builder","authRegister","mutation","query","email","password","fullName","avatar","url","method","body","authLogin","headers","Authorizatio","useAuthRegisterMutation","useAuthLoginMutation"],"sources":["/Users/meefala/Desktop/practice/mern-blog-new/src/api/authApi.js"],"sourcesContent":["import {createApi, fetchBaseQuery} from '@reduxjs/toolkit/query/react'\n\nconst BASE_URL = 'http://localhost:4444'\n\nexport const authApi = createApi({\n  reducerPath: 'auth',\n  baseQuery: fetchBaseQuery(\n    {baseUrl: BASE_URL}\n  ),\n  endpoints: (builder) => ({\n    authRegister: builder.mutation({\n      query: ({email, password, fullName, avatar}) => {\n        return {\n            url: '/auth/register',\n            method: 'POST',\n            body: {\n                email: email,\n                password: password,\n                fullName: fullName,\n                avatar: avatar\n            }\n        }\n      }\n    }),\n\n    authLogin: builder.mutation({\n        query: ({email, password}) => {\n            return {\n                url: '/auth/login',\n                method: 'POST',\n                body: {\n                    email: email,\n                    password: password\n                },\n                headers: {\n                  Authorizatio\n                }\n            }\n        }\n    })\n  })\n})\n\n\nexport const { useAuthRegisterMutation, useAuthLoginMutation } = authApi"],"mappings":"AAAA,SAAQA,SAAS,EAAEC,cAAc,QAAO,8BAA8B;AAEtE,MAAMC,QAAQ,GAAG,uBAAuB;AAExC,OAAO,MAAMC,OAAO,GAAGH,SAAS,CAAC;EAC/BI,WAAW,EAAE,MAAM;EACnBC,SAAS,EAAEJ,cAAc,CACvB;IAACK,OAAO,EAAEJ;EAAQ,CACpB,CAAC;EACDK,SAAS,EAAGC,OAAO,KAAM;IACvBC,YAAY,EAAED,OAAO,CAACE,QAAQ,CAAC;MAC7BC,KAAK,EAAEA,CAAC;QAACC,KAAK;QAAEC,QAAQ;QAAEC,QAAQ;QAAEC;MAAM,CAAC,KAAK;QAC9C,OAAO;UACHC,GAAG,EAAE,gBAAgB;UACrBC,MAAM,EAAE,MAAM;UACdC,IAAI,EAAE;YACFN,KAAK,EAAEA,KAAK;YACZC,QAAQ,EAAEA,QAAQ;YAClBC,QAAQ,EAAEA,QAAQ;YAClBC,MAAM,EAAEA;UACZ;QACJ,CAAC;MACH;IACF,CAAC,CAAC;IAEFI,SAAS,EAAEX,OAAO,CAACE,QAAQ,CAAC;MACxBC,KAAK,EAAEA,CAAC;QAACC,KAAK;QAAEC;MAAQ,CAAC,KAAK;QAC1B,OAAO;UACHG,GAAG,EAAE,aAAa;UAClBC,MAAM,EAAE,MAAM;UACdC,IAAI,EAAE;YACFN,KAAK,EAAEA,KAAK;YACZC,QAAQ,EAAEA;UACd,CAAC;UACDO,OAAO,EAAE;YACPC;UACF;QACJ,CAAC;MACL;IACJ,CAAC;EACH,CAAC;AACH,CAAC,CAAC;AAGF,OAAO,MAAM;EAAEC,uBAAuB;EAAEC;AAAqB,CAAC,GAAGpB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
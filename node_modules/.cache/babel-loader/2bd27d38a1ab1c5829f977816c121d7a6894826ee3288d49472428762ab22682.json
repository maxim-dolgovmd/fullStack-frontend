{"ast":null,"code":"var _jsxFileName = \"/Users/meefala/Desktop/practice/mern-blog-new/src/pages/FullPost.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport ReactMarkdown from \"react-markdown\";\nimport { Post } from \"../components/Post\";\nimport { Index } from \"../components/AddComment\";\nimport { CommentsBlock } from \"../components/CommentsBlock\";\nimport { useGetOnePostQuery } from \"../api/postsApi\";\nimport { useGetOneCommentsQuery } from \"../api/commentsApi\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { commentsType } from \"../redux/slices/comments\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const FullPost = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const dispatch = useDispatch();\n  const {\n    commentsQuantity\n  } = useSelector(commentsType);\n  const {\n    data,\n    isLoading\n  } = useGetOnePostQuery({\n    id\n  });\n  const {\n    data: comments,\n    isLoading: loading\n  } = useGetOneCommentsQuery({\n    id\n  });\n  console.log(data);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Post, {\n      isLoading: true,\n      isFullPost: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Post, {\n      id: id,\n      title: data === null || data === void 0 ? void 0 : data.title,\n      imageUrl: data.imageUrl ? `http://localhost:4444${data.imageUrl}` : '',\n      user: data === null || data === void 0 ? void 0 : data.user,\n      createdAt: data === null || data === void 0 ? void 0 : data.createdAt,\n      viewsCount: data === null || data === void 0 ? void 0 : data.viewsCount,\n      commentsCount: comments === null || comments === void 0 ? void 0 : comments.length,\n      tags: data === null || data === void 0 ? void 0 : data.tags,\n      isFullPost: true,\n      children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        children: data.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommentsBlock, {\n      items: comments,\n      isLoading: loading,\n      children: /*#__PURE__*/_jsxDEV(Index, {\n        article: data,\n        id: id ? id : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(FullPost, \"4oyNyXRtJYtFDMJzi+kLSj7dL58=\", false, function () {\n  return [useParams, useDispatch, useSelector, useGetOnePostQuery, useGetOneCommentsQuery];\n});\n_c = FullPost;\nvar _c;\n$RefreshReg$(_c, \"FullPost\");","map":{"version":3,"names":["React","useParams","ReactMarkdown","Post","Index","CommentsBlock","useGetOnePostQuery","useGetOneCommentsQuery","useSelector","useDispatch","commentsType","jsxDEV","_jsxDEV","Fragment","_Fragment","FullPost","_s","id","dispatch","commentsQuantity","data","isLoading","comments","loading","console","log","isFullPost","fileName","_jsxFileName","lineNumber","columnNumber","children","title","imageUrl","user","createdAt","viewsCount","commentsCount","length","tags","text","items","article","_c","$RefreshReg$"],"sources":["/Users/meefala/Desktop/practice/mern-blog-new/src/pages/FullPost.tsx"],"sourcesContent":["import React from \"react\";\nimport {useParams} from \"react-router-dom\";\nimport ReactMarkdown  from \"react-markdown\";\n\nimport { Post } from \"../components/Post\";\nimport { Index } from \"../components/AddComment\";\nimport { CommentsBlock } from \"../components/CommentsBlock\";\nimport { useGetOnePostQuery } from \"../api/postsApi\";\nimport { useGetOneCommentsQuery } from \"../api/commentsApi\";\n\nimport {useSelector, useDispatch} from 'react-redux'\nimport { commentsType } from \"../redux/slices/comments\";\n\n\nexport const FullPost = () => {\n\n  const {id} = useParams()\n  const dispatch = useDispatch()\n  const {commentsQuantity} = useSelector(commentsType)\n\n  const {data, isLoading} = useGetOnePostQuery({id})\n  const {data: comments, isLoading: loading} = useGetOneCommentsQuery({id})\n  console.log(data)\n\n  if (isLoading) {\n    return <Post isLoading={true} isFullPost/>\n  }\n\n  return (\n    <>\n      <Post\n        id={id}\n        title={data?.title}\n        imageUrl={data.imageUrl ? `http://localhost:4444${data.imageUrl}` : ''}\n        user={data?.user}\n        createdAt={data?.createdAt}\n        viewsCount={data?.viewsCount}\n        commentsCount={comments?.length}\n        tags={data?.tags}\n        isFullPost\n      >\n        <ReactMarkdown children={data.text} />\n      </Post>\n      <CommentsBlock\n        items={comments}\n        isLoading={loading}\n      >\n        <Index article={data} id={id ? id : ''}/>\n      </CommentsBlock>\n    </>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
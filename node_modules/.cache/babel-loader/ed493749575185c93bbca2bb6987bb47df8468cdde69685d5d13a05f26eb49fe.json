{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nconst BASE_URL = 'http://localhost:4444';\nexport const authApi = createApi({\n  reducerPath: 'auth',\n  baseQuery: fetchBaseQuery({\n    baseUrl: BASE_URL\n  }),\n  endpoints: builder => ({\n    authRegister: builder.mutation({\n      query: ({\n        email,\n        password,\n        fullName\n      }) => {\n        return {\n          url: '/auth/register',\n          method: 'POST',\n          body: {\n            email: email,\n            password: password,\n            fullName: fullName\n          },\n          headers: {\n            Authorization: window.localStorage.getItem('token')\n          }\n        };\n      }\n    }),\n    authLogin: builder.mutation({\n      query: ({\n        email,\n        password\n      }) => {\n        return {\n          url: '/auth/login',\n          method: 'POST',\n          body: {\n            email: email,\n            password: password\n          },\n          headers: {\n            Authorization: window.localStorage.getItem('token')\n          }\n        };\n      }\n    }),\n    authMe: builder.mutation({\n      query: () => {\n        return {\n          url: '/auth/me',\n          method: 'GET',\n          headers: {\n            Authorization: window.localStorage.getItem('token')\n          }\n        };\n      }\n    })\n  })\n});\nexport const {\n  useAuthRegisterMutation,\n  useAuthLoginMutation,\n  useAuthMeMutation\n} = authApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","BASE_URL","authApi","reducerPath","baseQuery","baseUrl","endpoints","builder","authRegister","mutation","query","email","password","fullName","url","method","body","headers","Authorization","window","localStorage","getItem","authLogin","authMe","useAuthRegisterMutation","useAuthLoginMutation","useAuthMeMutation"],"sources":["/Users/meefala/Desktop/practice/mern-blog-new/src/api/authApi.ts"],"sourcesContent":["import {createApi, fetchBaseQuery} from '@reduxjs/toolkit/query/react'\n\nconst BASE_URL = 'http://localhost:4444'\n\ninterface AuthsType {\n  _id: string,\n  fullName: string,\n  email: string,\n  avatarUrl: string,\n  createdAt: string,\n  updatedAt: string\n}\n\ninterface RegistersType {\n  email: string,\n  password: string,\n  fullName: string\n}\n\ninterface LoginsType {\n  email: string,\n  password: string,\n}\n\nexport const authApi = createApi({\n  reducerPath: 'auth',\n  baseQuery: fetchBaseQuery(\n    {baseUrl: BASE_URL}\n  ),\n  endpoints: (builder) => ({\n    authRegister: builder.mutation<null, RegistersType>({\n      query: ({email, password, fullName}) => {\n        return {\n            url: '/auth/register',\n            method: 'POST',\n            body: {\n                email: email,\n                password: password,\n                fullName: fullName,\n            },\n            headers: {\n              Authorization: window.localStorage.getItem('token') as any\n            }\n        }\n      }\n    }),\n\n    authLogin: builder.mutation<null, LoginsType>({\n        query: ({email, password}) => {\n            return {\n                url: '/auth/login',\n                method: 'POST',\n                body: {\n                    email: email,\n                    password: password\n                },\n                headers: {\n                  Authorization: window.localStorage.getItem('token') as any\n                }\n            }\n        }\n    }),\n\n    authMe: builder.mutation<AuthsType, void>({\n      query: () => {\n        return {\n          url: '/auth/me',\n          method: 'GET',\n          headers: {\n            Authorization: window.localStorage.getItem('token') as any\n          }\n        }\n      }\n    })\n  })\n})\n\n\nexport const { useAuthRegisterMutation, useAuthLoginMutation, useAuthMeMutation } = authApi"],"mappings":"AAAA,SAAQA,SAAS,EAAEC,cAAc,QAAO,8BAA8B;AAEtE,MAAMC,QAAQ,GAAG,uBAAuB;AAsBxC,OAAO,MAAMC,OAAO,GAAGH,SAAS,CAAC;EAC/BI,WAAW,EAAE,MAAM;EACnBC,SAAS,EAAEJ,cAAc,CACvB;IAACK,OAAO,EAAEJ;EAAQ,CACpB,CAAC;EACDK,SAAS,EAAGC,OAAO,KAAM;IACvBC,YAAY,EAAED,OAAO,CAACE,QAAQ,CAAsB;MAClDC,KAAK,EAAEA,CAAC;QAACC,KAAK;QAAEC,QAAQ;QAAEC;MAAQ,CAAC,KAAK;QACtC,OAAO;UACHC,GAAG,EAAE,gBAAgB;UACrBC,MAAM,EAAE,MAAM;UACdC,IAAI,EAAE;YACFL,KAAK,EAAEA,KAAK;YACZC,QAAQ,EAAEA,QAAQ;YAClBC,QAAQ,EAAEA;UACd,CAAC;UACDI,OAAO,EAAE;YACPC,aAAa,EAAEC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO;UACpD;QACJ,CAAC;MACH;IACF,CAAC,CAAC;IAEFC,SAAS,EAAEf,OAAO,CAACE,QAAQ,CAAmB;MAC1CC,KAAK,EAAEA,CAAC;QAACC,KAAK;QAAEC;MAAQ,CAAC,KAAK;QAC1B,OAAO;UACHE,GAAG,EAAE,aAAa;UAClBC,MAAM,EAAE,MAAM;UACdC,IAAI,EAAE;YACFL,KAAK,EAAEA,KAAK;YACZC,QAAQ,EAAEA;UACd,CAAC;UACDK,OAAO,EAAE;YACPC,aAAa,EAAEC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO;UACpD;QACJ,CAAC;MACL;IACJ,CAAC,CAAC;IAEFE,MAAM,EAAEhB,OAAO,CAACE,QAAQ,CAAkB;MACxCC,KAAK,EAAEA,CAAA,KAAM;QACX,OAAO;UACLI,GAAG,EAAE,UAAU;UACfC,MAAM,EAAE,KAAK;UACbE,OAAO,EAAE;YACPC,aAAa,EAAEC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO;UACpD;QACF,CAAC;MACH;IACF,CAAC;EACH,CAAC;AACH,CAAC,CAAC;AAGF,OAAO,MAAM;EAAEG,uBAAuB;EAAEC,oBAAoB;EAAEC;AAAkB,CAAC,GAAGxB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}